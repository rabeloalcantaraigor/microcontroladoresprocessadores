1. Quais as diferenças entre os barramentos de dados e de endereços?
Resp:
Barramento de dados: (Data bus) transmite dados entre as unidades. Um microprocessador de 8 bits requer um barramento de dados de 8 linhas para transmitir dados de 8 bits em paralelo. Um microprocessador de 64 bits requer um barramento de dados de 64 linhas para transmitir dados de 64 bits em paralelo. O barramento de dados é bidirecional, isto é, pode transmitir em ambas direções.
Barramento de endereços: (Adress bus) é usado para selecionar a origem ou destino de sinais para transmitidos num dos outros barramentos ou numa de suas linhas. Conduz endereços. Uma função típica dos barramentos de endereços é selecionar um registrador num dos dispositivos do sistema que é usado como a fonte ou destino do dado.

2. Quais são as diferenças entre as memórias RAM e ROM?
Resp:
Memória RAM: (Random Acess Memory), pode ser acessada a qualquer momento pelo sistema operacional para carregar e sobreescrever informações com muita rapidez. É um tipo de memória volátil que serve para rodar aplicações depois que o dispositivo já está ligado, e cuja as informações são perdidas com a perda de energia.
Memória ROM: (Realy Only Memory), memória somente de leitura e o lugar onde ficam informações básicas do dispositivo, portanto não perde a informações quando o dispositivo é desligado.

3. Considere o código abaixo:

#include <stdio.h>
int main(void)
{
	int i;
	printf("Insira um número inteiro: ");
	scanf("%d", &i);
	if(i%2)
		printf("%d eh impar.\n");
	else
		printf("%d eh par.\n");
	return 0;
}
Para este código, responda: (a) A variável i é armazenada na memória RAM ou ROM? Por quê? (b) O programa compilado a partir deste código é armazenado na memória RAM ou ROM? Por quê?

4. Quais são as diferenças, vantagens e desvantagens das arquiteturas Harvard e Von Neumann?

5. Considere a variável inteira i, armazenando o valor 0x8051ABCD. Se i é armazenada na memória a partir do endereço 0x0200, como ficam este byte e os seguintes, considerando que a memória é: (a) Little-endian; (b) Big-endian.

6. Sabendo que o processador do MSP430 tem registradores de 16 bits, como ele soma duas variáveis de 32 bits?
